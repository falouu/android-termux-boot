#!/bin/bash

# set -o errexit -o errtrace  # don't add it - this script is sourced so it will not work

# failure() {
#   local lineno=$1
#   local msg=$2
#   echo "FAILED at $lineno: $msg"
# }
# trap 'failure ${LINENO} "$BASH_COMMAND"' ERR

# g() {
#   GIT_TERMINAL_PROMPT=0 git "$@"
# }

_android_termux_boot_log() {
  echo
  echo "$@"
  echo
}

_android_termux_boot_test_github_conn() {
  echo
  echo -n "Checking GitHub ssh access... "
  local resp code
  resp="$(ssh -T "$@" git@github.com 2>&1 )" \
    && code=$? || code=$?
  
  grep -qE "\b${user}\b" <<< "${resp}" && \
    [[ $code == 1 ]] \
    && echo "SUCCESS" \
    || { >&2 echo "FAILED: code: ${code}, resp: ${resp}" ; false ; }
}

_android_termux_boot_test_github_conn_first_time() {
  _android_termux_boot_test_github_conn -o StrictHostKeyChecking=no
}

_android_termux_boot_create_key() {
  _android_termux_boot_log "Creating ssh key..." && \
  local manufacturer="$(getprop ro.product.manufacturer)" && \
  local model="$(getprop ro.product.model)" && \
  local key="${HOME}/.ssh/id_ed25519" && \
  rm -f "${key}" "${key}.pub" && \
  mkdir -p "${HOME}/.ssh" && \
  yes "" | ssh-keygen -t ed25519 \
    -C "${manufacturer}_${model}_termux" \
    -f "${key}" -N "" && \
  termux-clipboard-set < "${key}.pub" && \
  echo && \
  echo && \
  echo "Public ssh key has been copied to clipboard." && \
  echo "Now you have to add it to GitHub" && \
  echo && \
  echo "[Press enter to open GitHub]" && \
  read < /dev/tty && \
  termux-open-url 'https://github.com/settings/keys' && \
  echo "[Press enter when done]" && \
  read < /dev/tty
}

_android_termux_boot_run() {
  local user=falouu

  yes | pkg install git openssh termux-api && \
  yes | pkg upgrade && \
  if ! _android_termux_boot_test_github_conn_first_time; then 
    _android_termux_boot_log "Fixing access to the repository..."
    _android_termux_boot_create_key
    _android_termux_boot_test_github_conn
  fi && \
  cd "${HOME}" && \
  if ! [[ -d "${HOME}/.git" ]]; then
    rm -rf "${HOME}/*" && \
    rm -rf "${HOME}/.termux" && \
    \
    git init -b main && \
    git remote add origin git@github.com:falouu/android-termux.git && \
    git remote update && \
    git checkout -f main && \
    \
    _android_termux_boot_log "GitHub configured successfully"
    # if [[ -f "${HOME}/.ssh"
  fi && \
  \
  git pull && \
  ENSURE_RELOAD_SHELL=1 && \
  source ./dev/ensurer/ensure
  local status=$?
  unset _android_termux_boot_run _android_termux_boot_create_key _android_termux_boot_test_github_conn_first_time _android_termux_boot_test_github_conn _android_termux_boot_log
  return $status
}

_android_termux_boot_run
