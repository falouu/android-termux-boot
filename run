#!/bin/bash

set -o errexit -o errtrace

user=falouu

failure() {
  local lineno=$1
  local msg=$2
  echo "FAILED at $lineno: $msg"
}
trap 'failure ${LINENO} "$BASH_COMMAND"' ERR

g() {
  GIT_TERMINAL_PROMPT=0 git "$@"
}

test_github_conn() {
  local resp="$(ssh -T "$@" git@github.com 2>&1 )"
  local code=$?

  
}

test_github_conn_first_time() {
  test_github_conn -o StrictHostKeyChecking=no
}

create_key() {
  echo "Creating ssh key..."
  local manufacturer="$(getprop ro.product.manufacturer)"
  local model="$(getprop ro.product.model)"
  yes | pkg install openssh termux-api
  local key="${HOME}/.ssh/id_ed25519"
  rm -f "${key}" "${key}.pub"
  mkdir -p "${HOME}/.ssh"
  yes "" | ssh-keygen -t ed25519 \
    -C "${manufacturer}_${model}_termux" \
    -f "${key}" -N ""
  termux-clipboard-set < "${key}.pub"
  echo
  echo
  echo "Public ssh key has been copied to clipboard."
  echo "Now you have to add it to GitHub"
  echo
  echo "[Press enter to open GitHub]"
  read < /dev/tty
  termux-open-url 'https://github.com/settings/keys'
  echo "[Press enter when done]"
  read < /dev/tty
}

yes | pkg install git && {
  ssh -T -o StrictHostKeyChecking=no git@github.com || {
    echo "Fixing access to the repository..."
    create_key
    echo "Checking GitHub access..."
    ssh -T git@github.com
  }
  [[ -d "${HOME}/.git" ]] || {
    rm -rf "${HOME}/*"
    git clone https://${user}@github.com/falouu/android-termux.git "${HOME}"
  }
  cd "${HOME}"
  g remote update origin
  g pull
  echo "GitHub configured successfully"
  ./ensure

  # if [[ -f "${HOME}/.ssh"
}
