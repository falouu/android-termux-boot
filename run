#!/bin/bash

set -o errexit -o errtrace

user=falouu

failure() {
  local lineno=$1
  local msg=$2
  echo "FAILED at $lineno: $msg"
}
trap 'failure ${LINENO} "$BASH_COMMAND"' ERR

g() {
  GIT_TERMINAL_PROMPT=0 git "$@"
}

log() {
  echo
  echo "$@"
  echo
}

test_github_conn() {
  echo
  echo -n "Checking GitHub ssh access... "
  local resp code
  resp="$(ssh -T "$@" git@github.com 2>&1 )" \
    && code=$? || code=$?
  
  grep -qE "\b${user}\b" <<< "${resp}" && \
    [[ $code == 1 ]] \
    && echo "SUCCESS" \
    || { >&2 echo "FAILED: code: ${code}, resp: ${resp}" ; false ; }
}

test_github_conn_first_time() {
  test_github_conn -o StrictHostKeyChecking=no
}

create_key() {
  log "Creating ssh key..."
  local manufacturer="$(getprop ro.product.manufacturer)"
  local model="$(getprop ro.product.model)"
  local key="${HOME}/.ssh/id_ed25519"
  rm -f "${key}" "${key}.pub"
  mkdir -p "${HOME}/.ssh"
  yes "" | ssh-keygen -t ed25519 \
    -C "${manufacturer}_${model}_termux" \
    -f "${key}" -N ""
  termux-clipboard-set < "${key}.pub"
  echo
  echo
  echo "Public ssh key has been copied to clipboard."
  echo "Now you have to add it to GitHub"
  echo
  echo "[Press enter to open GitHub]"
  read < /dev/tty
  termux-open-url 'https://github.com/settings/keys'
  echo "[Press enter when done]"
  read < /dev/tty
}

yes | pkg install git openssh termux-api
yes | pkg upgrade
test_github_conn_first_time || {
  log "Fixing access to the repository..."
  create_key
  test_github_conn
}
[[ -d "${HOME}/.git" ]] || {
  rm -rf "${HOME}/*" 
  rm -rf "${HOME}/.termux" 

  cd "${HOME}"
  git init -b main 
  git remote add origin git@github.com:falouu/android-termux.git
  git remote update
  git checkout -f main
  g pull
  log "GitHub configured successfully"
  
  ./ensure

  # if [[ -f "${HOME}/.ssh"
}
